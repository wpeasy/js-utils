(()=>{const e={CHECK_TIMEOUT:1600,IS_DEBUG:!1,DEBUG_TYPE_LOG:"log",DEBUG_TYPE_INFO:"info",DEBUG_TYPE_WARN:"warn",DEBUG_TYPE_ERROR:"error"},n=(n,o=e.DEBUG_TYPE_LOG)=>{e.IS_DEBUG&&console[o](n)};let o=[];let t=[];void 0===window.WPG_JS_Loader&&(window.WPG_JS_Loader={}),window.WPG_JS_Loader.loadJS=(e,n,t=null)=>{if(window[e]||o.includes(e))return!0;o.push(e);const d=document.createElement("script");d.src=n,document.body.appendChild(d),t&&d.onload((()=>{t()}))},window.WPG_JS_Loader.loadCSS=(e,n)=>{if(t.includes(e))return!0;t.push(e);const o=document.createElement("link");o.href=n,o.rel="stylesheet",document.body.appendChild(o)},window.WPG_JS_Loader.globals=e,window.WPG_JS_Loader.debug=n,window.WPG_JS_Loader.checkDependencies=async function(o,t,d){await function(o){let t=0;const d=o.length;return n("First Dependency Check",e.DEBUG_TYPE_INFO),new Promise(((c,i)=>{let _=setInterval((()=>{let r=0;o.forEach((e=>{window[e]&&r++})),r===d?(n("All dependencies found",e.DEBUG_TYPE_INFO),clearInterval(_),c("OK")):(t+=200,t>e.CHECK_TIMEOUT&&(clearInterval(_),n("Dependencies not found before timeout",e.DEBUG_TYPE_ERROR),i("Missing dependencies")),n("Next Check:"+t,e.DEBUG_TYPE_INFO))}),200)}))}(o).then((()=>{const e=new CustomEvent(t);window.dispatchEvent(e)})).catch((e=>{const n=new CustomEvent(d,{detail:{error:e}});window.dispatchEvent(n)}))}})();
